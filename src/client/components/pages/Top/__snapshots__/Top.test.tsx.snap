// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render self and sub-components 1`] = `
<ApolloProvider
  client={
    ApolloClient {
      "cache": InMemoryCache {
        "addTypename": true,
        "cacheKeyRoot": CacheKeyNode {
          "children": null,
          "key": null,
        },
        "config": Object {
          "addTypename": true,
          "dataIdFromObject": [Function],
          "fragmentMatcher": HeuristicFragmentMatcher {},
        },
        "data": DepTrackingCache {
          "data": Object {},
          "depend": [Function],
        },
        "maybeBroadcastWatch": [Function],
        "optimistic": Array [],
        "silenceBroadcast": false,
        "storeReader": StoreReader {
          "cacheKeyRoot": CacheKeyNode {
            "children": null,
            "key": null,
          },
          "executeSelectionSet": [Function],
          "executeStoreQuery": [Function],
          "keyMaker": QueryKeyMaker {
            "cacheKeyRoot": CacheKeyNode {
              "children": null,
              "key": null,
            },
            "perQueryKeyMakers": Map {},
          },
        },
        "storeWriter": StoreWriter {},
        "typenameDocumentCache": Map {},
        "watches": Set {},
      },
      "defaultOptions": Object {},
      "disableNetworkFetches": false,
      "link": ApolloLink {
        "request": [Function],
      },
      "mutate": [Function],
      "query": [Function],
      "queryDeduplication": true,
      "reFetchObservableQueries": [Function],
      "resetStore": [Function],
      "resetStoreCallbacks": Array [],
      "ssrMode": false,
      "store": DataStore {
        "cache": InMemoryCache {
          "addTypename": true,
          "cacheKeyRoot": CacheKeyNode {
            "children": null,
            "key": null,
          },
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
          },
          "data": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimistic": Array [],
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "cacheKeyRoot": CacheKeyNode {
              "children": null,
              "key": null,
            },
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "keyMaker": QueryKeyMaker {
              "cacheKeyRoot": CacheKeyNode {
                "children": null,
                "key": null,
              },
              "perQueryKeyMakers": Map {},
            },
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {},
          "watches": Set {},
        },
      },
      "version": "2.4.2",
      "watchQuery": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <withProps(branch(branch(TopComponent)))
      error={null}
      load={[Function]}
    />
  </MemoryRouter>
</ApolloProvider>
`;
