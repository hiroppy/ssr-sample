// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots components/pages/Orgs default 1`] = `
<div
  style={
    Object {
      "background": "#f5f5f5",
      "margin": "50px auto",
      "width": "80%",
    }
  }
>
  <withProps(branch(branch(OrgsComponent)))
    error={null}
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 2,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "",
          "pathname": "",
          "search": "",
          "state": Object {},
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    isFetchingRepos={false}
    load={[Function]}
    location={
      Object {
        "hash": "",
        "key": "",
        "pathname": "",
        "search": "",
        "state": Object {},
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {
          "org": "storybook",
        },
        "path": "",
        "url": "",
      }
    }
    name="org"
    repos={
      Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      ]
    }
    staticContext={Object {}}
  >
    <branch(branch(OrgsComponent))
      error={null}
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 2,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "",
            "pathname": "",
            "search": "",
            "state": Object {},
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      isFetchingRepos={false}
      load={[Function]}
      location={
        Object {
          "hash": "",
          "key": "",
          "pathname": "",
          "search": "",
          "state": Object {},
        }
      }
      match={
        Object {
          "isExact": true,
          "params": Object {
            "org": "storybook",
          },
          "path": "",
          "url": "",
        }
      }
      name="org"
      repos={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
        ]
      }
      staticContext={Object {}}
      statusCode={null}
    >
      <branch(OrgsComponent)
        error={null}
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 2,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "",
              "pathname": "",
              "search": "",
              "state": Object {},
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        isFetchingRepos={false}
        load={[Function]}
        location={
          Object {
            "hash": "",
            "key": "",
            "pathname": "",
            "search": "",
            "state": Object {},
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {
              "org": "storybook",
            },
            "path": "",
            "url": "",
          }
        }
        name="org"
        repos={
          Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
          ]
        }
        staticContext={Object {}}
        statusCode={null}
      >
        <OrgsComponent
          error={null}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 2,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "key": "",
                "pathname": "",
                "search": "",
                "state": Object {},
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          isFetchingRepos={false}
          load={[Function]}
          location={
            Object {
              "hash": "",
              "key": "",
              "pathname": "",
              "search": "",
              "state": Object {},
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {
                "org": "storybook",
              },
              "path": "",
              "url": "",
            }
          }
          name="org"
          repos={
            Array [
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
            ]
          }
          staticContext={Object {}}
          statusCode={null}
        >
          <Component
            title="storybook"
          >
            <HelmetWrapper
              defer={true}
              encodeSpecialCharacters={true}
            >
              <SideEffect(NullComponent)
                defer={true}
                encodeSpecialCharacters={true}
                link={
                  Array [
                    Object {
                      "href": "https://fonts.googleapis.com/css?family=Muli",
                      "rel": "stylesheet",
                    },
                  ]
                }
                meta={
                  Array [
                    Object {
                      "charset": "UTF-8",
                    },
                    Object {
                      "content": "width=device-width, initial-scale=1.0",
                      "name": "viewport",
                    },
                  ]
                }
                title="storybook"
                titleAttributes={Object {}}
              >
                <NullComponent
                  defer={true}
                  encodeSpecialCharacters={true}
                  link={
                    Array [
                      Object {
                        "href": "https://fonts.googleapis.com/css?family=Muli",
                        "rel": "stylesheet",
                      },
                    ]
                  }
                  meta={
                    Array [
                      Object {
                        "charset": "UTF-8",
                      },
                      Object {
                        "content": "width=device-width, initial-scale=1.0",
                        "name": "viewport",
                      },
                    ]
                  }
                  title="storybook"
                  titleAttributes={Object {}}
                />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
          </Component>
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-htoDjs",
                    "isStatic": true,
                    "lastClassName": "kxdpii",
                    "rules": Array [
                      "
  display: grid;
  grid-gap: 1em;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-htoDjs",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-htoDjs kxdpii"
              />
            </StyledComponent>
          </styled.div>
        </OrgsComponent>
      </branch(OrgsComponent)>
    </branch(branch(OrgsComponent))>
  </withProps(branch(branch(OrgsComponent)))>
</div>
`;
